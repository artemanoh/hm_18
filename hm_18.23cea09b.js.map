{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,IAAM,EAAoB,SAAS,aAAa,CAAC,yBAC3C,EAAiB,SAAS,cAAc,CAAC,oBACzC,EAAO,SAAS,cAAc,CAAC,oBAEjC,EAAY,KAgBhB,SAAS,IACL,MAAM,kCACD,IAAI,CAAC,AAAC,GAAa,EAAS,IAAI,IAChC,IAAI,CAAC,AAAC,IACH,EAAkB,SAAS,CAAG,GAE9B,EAAS,OAAO,CAAC,AAAC,IACd,IAAM,EAAM,SAAS,aAAa,CAAC,KAEnC,CAAA,EAAI,SAAS,CAAG;AACpB,gBAAA,EAAE,EAAQ,EAAE,CAAC;AACb,gBAAA,EAAE,EAAQ,IAAI,CAAC;AACf,gBAAA,EAAE,EAAQ,GAAG,CAAC;AACd,gBAAA,EAAE,EAAQ,MAAM,CAAC;AACjB,gBAAA,EAAE,EAAQ,MAAM,CAAC,IAAI,CAAC,MAAM;AAC5B,gBAAA,EAAE,EAAQ,KAAK,CAAC;AAChB,gBAAA,EAAE,EAAQ,UAAU,CAAG,MAAQ,KAAK;A;AAEJ,gDAAA,EAAE,EAAQ,EAAE,CAAC;AAC7D,kDAAkD,EAAE,EAAQ,EAAE,CAAC;AAC/D;AACA,UAAU,CAAC,CAES,EAAkB,WAAW,CAAC,EAClC,EACJ,GACC,KAAK,CAAC,KAAQ,EACvB,CAzCA,EAAe,gBAAgB,CAAC,QAAS,GAEzC,EAAkB,gBAAgB,CAAC,QAAS,AAAC,QAkGtB,EAjGf,EAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAiGjB,EAhGJ,EAAM,MAAM,CAAC,OAAO,CAAC,EAAE,CAiGtC,MAAM,CAAC,+BAA+B,EAAE,EAAA,CAAI,CAAE,CAC1C,OAAQ,QACZ,GACK,IAAI,CAAC,AAAC,IACC,EAAS,EAAE,EAAE,GACrB,GACC,KAAK,CAAC,KAAQ,IAnGf,EAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,aAEhC,AA0ER,SAAsB,CAAE,EACpB,MAAM,CAAC,+BAA+B,EAAE,EAAA,CAAI,EACvC,IAAI,CAAC,AAAC,GAAa,EAAS,IAAI,IAChC,IAAI,CAAC,AAAC,IACH,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAG,EAAQ,IAAI,CACpD,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EAAQ,GAAG,CAClD,SAAS,cAAc,CAAC,UAAU,KAAK,CAAG,EAAQ,MAAM,CACxD,SAAS,cAAc,CAAC,UAAU,KAAK,CAAG,EAAQ,MAAM,CAAC,IAAI,CAAC,MAC9D,SAAS,cAAc,CAAC,SAAS,KAAK,CAAG,EAAQ,KAAK,CACtD,SAAS,cAAc,CAAC,cAAc,OAAO,CAAG,EAAQ,UAAU,CAElE,EAAY,CAChB,GACC,KAAK,CAAC,KAAQ,EACvB,EAzFmB,EAAM,MAAM,CAAC,OAAO,CAAC,EAAE,CAG1C,GA+BA,EAAK,gBAAgB,CAAC,SAAU,AAAC,IAC7B,EAAM,cAAc,GAEpB,IAAM,EAAc,CAChB,KAAM,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAC,IAAI,GAChD,IAAK,OAAO,SAAS,cAAc,CAAC,OAAO,KAAK,EAChD,OAAQ,SAAS,cAAc,CAAC,UAAU,KAAK,CAAC,IAAI,GACpD,OAAQ,SAAS,cAAc,CAAC,UAAU,KAAK,CAAC,OAAO,CAAC,WAAY,KAAK,KAAK,CAAC,KAC/E,MAAO,SAAS,cAAc,CAAC,SAAS,KAAK,CAAC,IAAI,GAClD,WAAY,SAAS,cAAc,CAAC,cAAc,OAAO,AAC7D,EAEI,EACA,MAAM,CAAC,+BAA+B,EAAE,EAAA,CAAW,CAAE,CACjD,OAAQ,QACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,EACzB,GACK,IAAI,CAAC,AAAC,IACC,EAAS,EAAE,GACX,EAAY,KACZ,EAAK,KAAK,GACV,IAER,GACC,KAAK,CAAC,KAAQ,GAEnB,MAAM,iCAAkC,CACpC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,EACzB,GACK,IAAI,CAAC,AAAC,GAAa,EAAS,IAAI,IAChC,IAAI,CAAC,KACF,EAAK,KAAK,GACV,GACJ,GACC,KAAK,CAAC,KAAQ,EAE3B,EA2BJ","sources":["<anon>","src/index.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const studentsTableBody = document.querySelector(\"#students-table tbody\");\n    const getStudentsBtn = document.getElementById(\"get-students-btn\");\n    const form = document.getElementById(\"add-student-form\");\n    let editingId = null;\n    getStudentsBtn.addEventListener(\"click\", getStudents);\n    studentsTableBody.addEventListener(\"click\", (event)=>{\n        if (event.target.classList.contains(\"delete-btn\")) {\n            const id = event.target.dataset.id;\n            deleteStudent(id);\n        }\n        if (event.target.classList.contains(\"edit-btn\")) {\n            const id = event.target.dataset.id;\n            startEditing(id);\n        }\n    });\n    function getStudents() {\n        fetch(\"http://localhost:3000/students\").then((response)=>response.json()).then((students)=>{\n            studentsTableBody.innerHTML = \"\";\n            students.forEach((student)=>{\n                const row = document.createElement(\"tr\");\n                row.innerHTML = `\n            <td>${student.id}</td>\n            <td>${student.name}</td>\n            <td>${student.age}</td>\n            <td>${student.course}</td>\n            <td>${student.skills.join(\", \")}</td>\n            <td>${student.email}</td>\n            <td>${student.isEnrolled ? \"\\u0422\\u0430\\u043A\" : \"\\u041D\\u0456\"}</td>\n            <td>\n              <button class=\"edit-btn\" data-id=\"${student.id}\">\\u{420}\\u{435}\\u{434}\\u{430}\\u{433}\\u{443}\\u{432}\\u{430}\\u{442}\\u{438}</button>\n              <button class=\"delete-btn\" data-id=\"${student.id}\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n            </td>\n          `;\n                studentsTableBody.appendChild(row);\n            });\n        }).catch(()=>{});\n    }\n    form.addEventListener(\"submit\", (event)=>{\n        event.preventDefault();\n        const studentData = {\n            name: document.getElementById(\"name\").value.trim(),\n            age: Number(document.getElementById(\"age\").value),\n            course: document.getElementById(\"course\").value.trim(),\n            skills: document.getElementById(\"skills\").value.replace(/\\s*,\\s*/g, \",\").split(\",\"),\n            email: document.getElementById(\"email\").value.trim(),\n            isEnrolled: document.getElementById(\"isEnrolled\").checked\n        };\n        if (editingId) fetch(`http://localhost:3000/students/${editingId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(studentData)\n        }).then((response)=>{\n            if (response.ok) {\n                editingId = null;\n                form.reset();\n                getStudents();\n            }\n        }).catch(()=>{});\n        else fetch(\"http://localhost:3000/students\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(studentData)\n        }).then((response)=>response.json()).then(()=>{\n            form.reset();\n            getStudents();\n        }).catch(()=>{});\n    });\n    function startEditing(id) {\n        fetch(`http://localhost:3000/students/${id}`).then((response)=>response.json()).then((student)=>{\n            document.getElementById(\"name\").value = student.name;\n            document.getElementById(\"age\").value = student.age;\n            document.getElementById(\"course\").value = student.course;\n            document.getElementById(\"skills\").value = student.skills.join(\", \");\n            document.getElementById(\"email\").value = student.email;\n            document.getElementById(\"isEnrolled\").checked = student.isEnrolled;\n            editingId = id;\n        }).catch(()=>{});\n    }\n    function deleteStudent(id) {\n        fetch(`http://localhost:3000/students/${id}`, {\n            method: \"DELETE\"\n        }).then((response)=>{\n            if (response.ok) getStudents();\n        }).catch(()=>{});\n    }\n});\n\n//# sourceMappingURL=hm_18.23cea09b.js.map\n","document.addEventListener(\"DOMContentLoaded\", () => {\n    const studentsTableBody = document.querySelector(\"#students-table tbody\");\n    const getStudentsBtn = document.getElementById(\"get-students-btn\");\n    const form = document.getElementById(\"add-student-form\");\n\n    let editingId = null;\n\n    getStudentsBtn.addEventListener(\"click\", getStudents);\n\n    studentsTableBody.addEventListener(\"click\", (event) => {\n        if (event.target.classList.contains(\"delete-btn\")) {\n            const id = event.target.dataset.id;\n            deleteStudent(id);\n        }\n\n        if (event.target.classList.contains(\"edit-btn\")) {\n            const id = event.target.dataset.id;\n            startEditing(id);\n        }\n    });\n\n    function getStudents() {\n        fetch(\"http://localhost:3000/students\")\n            .then((response) => response.json())\n            .then((students) => {\n                studentsTableBody.innerHTML = \"\";\n\n                students.forEach((student) => {\n                    const row = document.createElement(\"tr\");\n\n                    row.innerHTML = `\n            <td>${student.id}</td>\n            <td>${student.name}</td>\n            <td>${student.age}</td>\n            <td>${student.course}</td>\n            <td>${student.skills.join(\", \")}</td>\n            <td>${student.email}</td>\n            <td>${student.isEnrolled ? \"Так\" : \"Ні\"}</td>\n            <td>\n              <button class=\"edit-btn\" data-id=\"${student.id}\">Редагувати</button>\n              <button class=\"delete-btn\" data-id=\"${student.id}\">Видалити</button>\n            </td>\n          `;\n\n                    studentsTableBody.appendChild(row);\n                });\n            })\n            .catch(() => { });\n    }\n\n    form.addEventListener(\"submit\", (event) => {\n        event.preventDefault();\n\n        const studentData = {\n            name: document.getElementById(\"name\").value.trim(),\n            age: Number(document.getElementById(\"age\").value),\n            course: document.getElementById(\"course\").value.trim(),\n            skills: document.getElementById(\"skills\").value.replace(/\\s*,\\s*/g, \",\").split(\",\"),\n            email: document.getElementById(\"email\").value.trim(),\n            isEnrolled: document.getElementById(\"isEnrolled\").checked,\n        };\n\n        if (editingId) {\n            fetch(`http://localhost:3000/students/${editingId}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(studentData),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        editingId = null;\n                        form.reset();\n                        getStudents();\n                    }\n                })\n                .catch(() => { });\n        } else {\n            fetch(\"http://localhost:3000/students\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(studentData),\n            })\n                .then((response) => response.json())\n                .then(() => {\n                    form.reset();\n                    getStudents();\n                })\n                .catch(() => { });\n        }\n    });\n\n    function startEditing(id) {\n        fetch(`http://localhost:3000/students/${id}`)\n            .then((response) => response.json())\n            .then((student) => {\n                document.getElementById(\"name\").value = student.name;\n                document.getElementById(\"age\").value = student.age;\n                document.getElementById(\"course\").value = student.course;\n                document.getElementById(\"skills\").value = student.skills.join(\", \");\n                document.getElementById(\"email\").value = student.email;\n                document.getElementById(\"isEnrolled\").checked = student.isEnrolled;\n\n                editingId = id;\n            })\n            .catch(() => { });\n    }\n\n    function deleteStudent(id) {\n        fetch(`http://localhost:3000/students/${id}`, {\n            method: \"DELETE\",\n        })\n            .then((response) => {\n                if (response.ok) getStudents();\n            })\n            .catch(() => { });\n    }\n});\n"],"names":["document","addEventListener","studentsTableBody","querySelector","getStudentsBtn","getElementById","form","editingId","getStudents","fetch","then","response","json","students","innerHTML","forEach","student","row","createElement","id","name","age","course","skills","join","email","isEnrolled","appendChild","catch","event","target","classList","contains","dataset","method","ok","startEditing","value","checked","preventDefault","studentData","trim","Number","replace","split","headers","body","JSON","stringify","reset"],"version":3,"file":"hm_18.23cea09b.js.map"}